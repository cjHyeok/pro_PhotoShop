<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductMapper">


	<select id="productList" parameterType="String" resultType="ProductDTO">
	    SELECT p.product_id, p.product_name, p.product_price, p.product_description_summary, p.product_description, c.product_category_id , c.category_name, i.product_img
		FROM T_PRODUCT p JOIN T_PRODUCT_CATE c
								on p.product_category_id = c.product_category_id
                                join T_PRODUCT_IMG i
								on p.product_id = i.product_id
        WHERE c.category_name = #{category_name}
        ORDER BY p.product_price ASC
	</select>
	
	<select id="productListPriceDesc" parameterType="String" resultType="ProductDTO">
	    SELECT p.product_id, p.product_name, p.product_price, p.product_description_summary, p.product_description, c.product_category_id , c.category_name, i.product_img
		FROM T_PRODUCT p JOIN T_PRODUCT_CATE c
								on p.product_category_id = c.product_category_id
                                join T_PRODUCT_IMG i
								on p.product_id = i.product_id
        WHERE c.category_name = #{category_name}
        ORDER BY p.product_price desc
	</select> <!-- 나중에 상품리스트 정렬 -->
	
	
	<select id="productListAll" parameterType="int" resultType="ProductDTO">
	    SELECT p.product_id, p.product_name, p.product_price, p.product_description_summary, p.product_description, c.product_category_id , c.category_name, i.product_img, p.product_quantity, p.product_register_date
		FROM T_PRODUCT p JOIN T_PRODUCT_CATE c
								on p.product_category_id = c.product_category_id
                                join T_PRODUCT_IMG i
								on p.product_id = i.product_id
		ORDER BY p.product_id DESC
	</select>
	
	
	<select id="productMainList" parameterType="int" resultType="ProductDTO">
	    SELECT p.product_id, p.product_name, p.product_price, p.product_description_summary, c.product_category_id , c.category_name, i.product_img
		FROM T_PRODUCT p JOIN T_PRODUCT_CATE c
								on p.product_category_id = c.product_category_id
                                join T_PRODUCT_IMG i
								on p.product_id = i.product_id
								
		<!-- where p.product_best = 'best' -->						
		order by p.product_id desc

	</select>
	
	
	<select id="productDetails" parameterType="hashmap" resultType="ProductDTO">
		select p.product_id, p.product_name, p.product_price, p.product_category_id, p.product_description_summary, p.product_quantity,p.product_description,p.product_sales_quantity,p.product_sales_state, i.product_img, i.product_img_type, 
				i.product_sub_img_1, i.product_sub_img_2, i.product_sub_img_3, i.product_sub_img_4,
				(select count(product_id) from T_WISH where product_id = #{product_id}) as wish_count,
                (select count(product_id) from T_WISH where product_id = #{product_id} and user_id=#{user_id}) as wish_my
                
		from T_PRODUCT p JOIN T_PRODUCT_IMG i
                               	on p.product_id = i.product_id
		where p.product_id = #{product_id}
	</select>
	
<!-- 
	<select id="produtDetailList" parameterType="MemberDTO" resultType="ProductDTO">
	
		
	</select> -->

	<insert id="productAdd" parameterType="ProductDTO">
                
 		INSERT ALL
			INTO T_PRODUCT (product_id, product_category_id, product_name, product_price, product_quantity, product_description_summary, 
			product_description, product_sales_state, product_register_date)
      	  VALUES(#{product_id},#{product_category_id}, #{product_name}, #{product_price}, #{product_quantity}, #{product_description_summary},
      	   #{product_description}, #{product_sales_state},NOW())
		
      	  INTO T_PRODUCT_IMG (product_id, product_photo_id, product_img, product_sub_img_1, product_sub_img_2, product_sub_img_3, product_sub_img_4)
      	  VALUES(#{product_id}, PRODUCT_PHOTO_ID_SEQ.nextval, #{product_img}, #{product_sub_img_1}, #{product_sub_img_2},#{product_sub_img_3},#{product_sub_img_4})
     	   SELECT *
      	FROM DUAL
        
	</insert>
	
	<select id="category_List" parameterType="int" resultType="ProductCategoryDTO">
		SELECT product_category_id, category_name
		FROM T_PRODUCT_CATE
		WHERE category_level = #{category_level}
		
	</select>
	
	<delete id="ItemDelete" parameterType="arraylist">
		DELETE
		FROM T_PRODUCT
		WHERE product_id IN

		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		
	
	</delete>

	<delete id="ItemImgDelete" parameterType="arraylist">
		DELETE
		FROM T_PRODUCT_IMG
		WHERE product_id IN

		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		
	</delete>
	
	<update id="ModifyUpdate" parameterType="hashmap">
		UPDATE T_PRODUCT
		SET 
			
			product_category_id = #{product_category_id},
			product_name = #{product_name},
			product_price = #{product_price},
			product_quantity = #{product_quantity},
			product_description_summary = #{product_description_summary},
			product_description = #{product_description},
			product_sales_state = #{product_sales_state}
		
		WHERE product_id = #{product_id}
	</update>

	<update id="ModifyImgUpdate" parameterType="hashmap">
		UPDATE T_PRODUCT_IMG
		SET 
			product_img = #{product_img},
			product_sub_img_1 = #{product_sub_img_1},
			product_sub_img_2 = #{product_sub_img_2},
			product_sub_img_3 = #{product_sub_img_3},
			product_sub_img_4 = #{product_sub_img_4}
		WHERE product_id = #{product_id}
	</update>
	

	
</mapper>